name: stack

services:
  fx:
    build:
      context: ./services/fx
    image: fx:latest
    env_file:
      - ./services/fx/.env
    ports:
      - "8000:8000"
    volumes:
      - ./services/fx/data:/data
    healthcheck:
      test: ["CMD-SHELL", "python - <<'PY'\nimport urllib.request,sys\nurllib.request.urlopen('http://127.0.0.1:8000/health', timeout=3)\nsys.exit(0)\nPY"]
      interval: 20s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped

  market_data:
    build: ./services/market_data
    image: market_data:latest
    env_file:
      - ./services/market_data/.env
    ports:
      - "8001:8000"
    volumes:
      - market_data_data:/app/data
    depends_on:
      fx:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "python - <<'PY'\nimport urllib.request,sys\nurllib.request.urlopen('http://127.0.0.1:8000/health', timeout=3)\nsys.exit(0)\nPY"]
      interval: 20s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped

  telegram_router:
    build:
      context: ./services/telegram_router
    env_file:
      - ./services/telegram_router/.env
    volumes:
      - ./services/telegram_router/data:/app/data
      - ./services/telegram_router/config:/config:ro
    ports:
      - "8010:8010"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-fsS", "http://127.0.0.1:8010/health"]
      interval: 20s
      timeout: 5s
      retries: 5
      start_period: 10s

  sqliteweb_fx:
    image: coleifer/sqlite-web:latest
    ports:
      - "127.0.0.1:8081:8080"
    volumes:
      - ./services/fx/data:/data:ro
    command: ["sqlite_web", "-H", "0.0.0.0", "/data/cache.db"]
    depends_on:
      fx:
        condition: service_healthy
    restart: unless-stopped

  sqliteweb_market_data:
    image: coleifer/sqlite-web:latest
    ports:
      - "127.0.0.1:8082:8080"
    volumes:
      - market_data_data:/md
    command: ["sh","-c","test -f /md/cache.db && sqlite_web -H 0.0.0.0 /md/cache.db || sqlite_web -H 0.0.0.0 /md"]
    depends_on:
      market_data:
        condition: service_started
    restart: unless-stopped

  portfolio_core:
    build:
      context: ./services/portfolio_core
    image: portfolio_core:latest
    env_file:
      - ./services/portfolio_core/.env
    ports:
      - "8002:8000"
    volumes:
      - portfolio_core_data:/app/data
    depends_on:
      market_data:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "python - <<'PY'\nimport urllib.request,sys\nurllib.request.urlopen('http://127.0.0.1:8000/health', timeout=3)\nsys.exit(0)\nPY"]
      interval: 20s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped

  sqliteweb_portfolio:
    image: coleifer/sqlite-web:latest
    ports:
      - "127.0.0.1:8083:8080"
    volumes:
      - portfolio_core_data:/data
    command: ["sh","-c","test -f /data/portfolio.db && sqlite_web -H 0.0.0.0 /data/portfolio.db || sqlite_web -H 0.0.0.0 /data"]
    depends_on:
      portfolio_core:
        condition: service_started
    restart: unless-stopped

volumes:
  market_data_data:
  portfolio_core_data:
