services:
  fx:
    build:
      context: ./services/fx
    env_file:
      - ./services/fx/.env
    ports:
      - "8000:8000"
    volumes:
      - ./services/fx/data:/data
    healthcheck:
      test: ["CMD-SHELL", "python - <<'PY'\nimport urllib.request,sys\nurllib.request.urlopen('http://127.0.0.1:8000/health', timeout=3)\nsys.exit(0)\nPY"]
      interval: 20s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped

  # portfolio-logic:
  #   build:
  #     context: ./services/portfolio
  #   env_file:
  #     - ./services/portfolio/.env
  #   ports:
  #     - "8001:8000"
  #   volumes:
  #     - ./services/portfolio/data:/data
  #   depends_on:
  #     fx:
  #       condition: service_healthy
  #   healthcheck:
  #     test: ["CMD-SHELL", "curl -fsS --max-time 3 http://127.0.0.1:8000/health || exit 1"]
  #     interval: 20s
  #     timeout: 5s
  #     retries: 5
  #     start_period: 10s
  #   restart: unless-stopped

  sqliteweb:
    image: coleifer/sqlite-web:latest
    ports:
      - "127.0.0.1:8081:8080"
    volumes:
      - ./services/portfolio/data:/data
    command: ["sqlite_web", "-H", "0.0.0.0", "/data/cache.db"]
    depends_on:
      portfolio-logic:
        condition: service_started

  n8n:
    image: n8nio/n8n:latest
    container_name: n8n
    restart: unless-stopped
    ports:
      - "127.0.0.1:5678:5678"
    environment:
      - N8N_BASIC_AUTH_ACTIVE=true
      - N8N_BASIC_AUTH_USER=admin
      - N8N_BASIC_AUTH_PASSWORD=${N8N_BASIC_AUTH_PASSWORD}
      - TZ=Europe/Berlin
      - GENERIC_TIMEZONE=Europe/Berlin
      - N8N_HOST=${N8N_HOST}
      - N8N_PROTOCOL=https
      - WEBHOOK_URL=${WEBHOOK_URL}
      - N8N_EDITOR_BASE_URL=${N8N_EDITOR_BASE_URL}
      - N8N_TRUSTED_PROXIES=loopback
      - N8N_RUNNERS_ENABLED=true
      - DB_SQLITE_POOL_SIZE=5
      - N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS=true
    volumes:
      - n8n_data:/home/node/.n8n
    # mount your command registry read-only
      - /opt/stack/config:/config:ro
    depends_on:
      fx:
        condition: service_healthy
      # portfolio-logic:
      #   condition: service_healthy

volumes:
  n8n_data:
    external: true
    name: n8n_n8n_data
