name: stack

services:
  fx:
    build:
      context: ./services/fx
    env_file:
      - ./services/fx/.env
    ports:
      - "8000:8000"
    volumes:
      - ./services/fx/data:/data
    healthcheck:
      test: ["CMD-SHELL", "python - <<'PY'\nimport urllib.request,sys\nurllib.request.urlopen('http://127.0.0.1:8000/health', timeout=3)\nsys.exit(0)\nPY"]
      interval: 20s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped

  market_data:
    build: ./services/market_data
    image: market_data:latest
    env_file:
      - ./services/market_data/.env
    ports:
      - "8001:8000"
    volumes:
      - market_data_data:/app/data
    depends_on:
      fx:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS --max-time 3 http://127.0.0.1:8000/health || exit 1"]
      interval: 20s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped

  portfolio-logic:
    build:
      context: ./services/portfolio
    env_file:
      - ./services/portfolio/.env
    ports:
      - "8004:8000"
    volumes:
      - ./services/portfolio/data:/data
    depends_on:
      fx:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS --max-time 3 http://127.0.0.1:8000/health || exit 1"]
      interval: 20s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped

  # Optional SQLite web viewer for the FX cache DB (localhost only)
  sqliteweb_fx:
    image: coleifer/sqlite-web:latest
    ports:
      - "127.0.0.1:8081:8080"
    volumes:
      - ./services/fx/data:/data:ro
    command: ["sqlite_web", "-H", "0.0.0.0", "/data/cache.db"]
    depends_on:
      fx:
        condition: service_healthy
    restart: unless-stopped

  # Optional SQLite web viewer for market_data cache (named volume)
  sqliteweb_market_data:
    image: coleifer/sqlite-web:latest
    ports:
      - "127.0.0.1:8082:8080"
    volumes:
      - market_data_data:/md:ro
    command: ["sqlite_web", "-H", "0.0.0.0", "/md/cache.db"]
    depends_on:
      market_data:
        condition: service_started
    restart: unless-stopped

volumes:
  market_data_data:
